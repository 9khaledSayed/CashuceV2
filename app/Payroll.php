<?php

namespace App;

use App\Scopes\ParentScope;
use Illuminate\Database\Eloquent\Model;

class Payroll extends Model
{
    protected $guarded=[];
    protected $dates = ['date', 'issue_date'];
    protected $casts = [
        'date'  => 'date:M-Y',
    ];

    protected static function booted()
    {
        parent::booted(); // TODO: Change the autogenerated stub
        static::addGlobalScope(new ParentScope());

        static::creating(function ($payroll){
            $employee = auth()->user();
            $managerId = ($employee->is_manager)? $employee->id:$employee->manager->id;
            $payroll->manager_id = $managerId; // for Ceo
        });
        static::created(function ($payroll){
            $payroll->salaries()->delete();
            $employees = Employee::get();
            $monthHolidays = 4;
            foreach ($employees as $employee) {
                $workDays = $employee->workDays($payroll->date->month);
                $salaryBeforeDeductions = $workDays * ($employee->salary()/(30 - $monthHolidays));
                $deductions = $employee->deductions();
                $netSalary = $salaryBeforeDeductions  - $deductions;

                Salary::create([
                    'employee_id' => $employee->id,
                    'payroll_id' => $payroll->id,
                    'salary' => $salaryBeforeDeductions,
                    'deductions' => $deductions,
                    'net_salary' => $netSalary,
                    'work_days' => $workDays,
                ]);

            }
        });
    }

    public function salaries()
    {
        return $this->hasMany(Salary::class);
    }
}
